{
  "version": 3,
  "sources": ["../../../node_modules/suspend-react/dist/index.js", "../../../node_modules/@sanity/preview-kit/src/auth.ts", "../../../node_modules/@sanity/preview-kit/src/lazy.ts", "../../../node_modules/@sanity/preview-kit/src/definePreview.ts", "../../../node_modules/@sanity/preview-kit/src/PreviewSuspense.tsx", "../../../app/components/ExitPreview.tsx", "../../../app/components/Product.tsx"],
  "sourcesContent": ["const globalCache = [];\n\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nfunction query(fn, keys, preload = false, config = {}) {\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) return entry.response; // If the promise is still unresolved, throw\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    promise: // Execute the promise\n    fn(...keys) // When it resolves, store its value\n    .then(response => entry.response = response) // Remove the entry if a lifespan was given\n    .then(() => {\n      if (config.lifespan && config.lifespan > 0) {\n        setTimeout(() => {\n          const index = globalCache.indexOf(entry);\n          if (index !== -1) globalCache.splice(index, 1);\n        }, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n\n    if (entry) {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    }\n  }\n};\n\nexport { clear, peek, preload, suspend };\n", "/**\n * Checks if the current token, or cookies, result in a valid session\n * @internal\n */\nexport const _checkAuth = async (\n  projectId: string,\n  token: string | null\n): Promise<boolean> => {\n  const headers = token ? { Authorization: `Bearer ${token}` } : undefined\n  const res = await fetch(`https://${projectId}.api.sanity.io/v1/users/me`, {\n    credentials: 'include',\n    headers,\n  })\n  const json = await res.json()\n  return Boolean(json?.id)\n}\n", "import type { Config, GroqStore } from '@sanity/groq-store'\nimport type { EventSourcePolyfill as EventSourcePolyfillType } from 'event-source-polyfill'\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\n/**\n * Lazy loaded, heavy, libs. Most use cases want to wrap these in `suspend-react`:\n * ```tsx\n * import {suspend} from 'suspend-react'\n * import {_lazyGroqStore} from '@sanity/preview-kit'\n *\n * export default function PreviewComponent() {\n *   const groqStore = suspend(() => _lazyGroqStore(), ['@sanity/preview-kit', '@sanity/groq-store])\n * }\n * ```\n * This makes them load in any app that uses React 18 and have Suspense features enabled.\n * For Next 13 and React Server Components, they should be wrapped in `React.use` and `React.cache`, this is done for you by `next-sanity`:\n * ```tsx\n * import {cache, use} from 'react'\n * import {_lazyGroqStore} from '@sanity/preview-kit'\n *\n * const lazyGroqStore = cache(_lazyGroqStore)\n *\n * export default function PreviewComponent() {\n *   const groqStore = use(lazyGroqStore())\n * }\n * ```\n * @internal\n */\nexport const _lazyGroqStore = async () => {\n  const pkg = await import('@sanity/groq-store')\n  const { groqStore } = 'default' in pkg ? pkg.default : pkg\n  return groqStore as (config: Config) => GroqStore\n}\n\n/**\n * See the typings for `_lazyGroqStore` for detailed usage instructions.\n * @internal\n */\nexport const _lazyEventSourcePolyfill = async () => {\n  const pkg = await import('event-source-polyfill')\n  const { EventSourcePolyfill } = 'default' in pkg ? pkg.default : pkg\n  return EventSourcePolyfill as unknown as EventSourcePolyfillType\n}\n", "import type { Config, GroqStore } from '@sanity/groq-store'\nimport type { EventSourcePolyfill } from 'event-source-polyfill'\nimport { useEffect, useMemo, useState, useSyncExternalStore } from 'react'\nimport { suspend } from 'suspend-react'\n\nimport { _checkAuth } from './auth'\nimport { _lazyEventSourcePolyfill, _lazyGroqStore } from './lazy'\n\n/**\n * The params type used both in `@sanity/client`:\n * ```tsx\n * import {createClient} from '@sanity/client'\n *\n * const client = createClient()\n * await client.fetch(\n *   '*[_type == \"post\"]',\n *   params // <-- this is the type\n * )\n * ```\n * It's also used with the `usePreview` hook returned by `definePreview`:\n * ```tsx\n * import {definePreview} from '@sanity/preview-kit'\n * const usePreview = definePreview()\n * usePreview(\n *   token,\n *   '*[_type == \"post\"]',\n *   params // <-- this is the type\n * )\n * ```\n * @public\n */\nexport type Params = Record<string, unknown>\n\n/**\n * @internal\n */\nexport interface _PreviewConfig extends PreviewConfig {\n  /**\n   * Lazy load `@sanity/groq-store`.\n   */\n  importGroqStore: () => (config: Config) => GroqStore\n  /**\n   * Lazy load `event-source-polyfille`.\n   * This happens if `token` is specified.\n   */\n  importEventSourcePolyfill: () => EventSourcePolyfill\n  /**\n   * Suspend render until the dataset is done loading.\n   */\n  preload: <R = any, P extends Params = Params, Q extends string = string>(\n    store: GroqStore,\n    query: Q,\n    /**\n     * Must wrap in `useMemo` to avoid infinite loop\n     */\n    params?: P\n  ) => R\n  /**\n   * Only called if `onPublicAccessOnly` is defined. Render is suspended until this Promise resolves to a boolean.\n   */\n  checkAuth: (projectId: string, token: string | null) => boolean\n}\n\n/**\n * Return params that are stable with deep equal as long as the key order is the same\n * @internal\n */\nfunction useParams<P extends Params = Params>(params?: P): P {\n  const stringifiedParams = useMemo(\n    () => JSON.stringify(params || {}),\n    [params]\n  )\n  return useMemo(() => JSON.parse(stringifiedParams), [stringifiedParams])\n}\n\n/**\n * @internal\n */\nexport const _definePreview = ({\n  projectId,\n  dataset,\n  documentLimit = 3000,\n  subscriptionThrottleMs = 10,\n  overlayDrafts = true,\n  importEventSourcePolyfill,\n  importGroqStore,\n  preload,\n  onPublicAccessOnly,\n  checkAuth,\n  includeTypes,\n}: _PreviewConfig): UsePreview => {\n  if (!projectId) {\n    console.warn(`No projectId set for createPreviewHook, returning dummy hook`)\n    // No projectId set, just return a dummy hook and warn\n    const usePreview: UsePreview = function usePreview() {\n      console.warn(\n        `The hook returned by createPreviewHook is a dummy as there is no projectId set, returning null`\n      )\n      return null\n    }\n    return usePreview\n  }\n\n  let store: ReturnType<typeof import('@sanity/groq-store').groqStore>\n  return function usePreview<\n    R = any,\n    P extends Params = Params,\n    Q extends string = string\n  >(\n    token: string | null,\n    query: Q,\n    _params?: P,\n    _serverSnapshot?: R\n  ): R | null {\n    if (typeof document === 'undefined') {\n      throw new Error(\n        `Calling usePreview outside a browser environment isn't supported. Ensure the component using the hook is only rendering on the client. For example by wrapping it in PreviewSuspense.`\n      )\n    }\n    if (!token && token !== null) {\n      throw new Error(\n        'No `token` given to usePreview hook, if this is intentional then set it to `null`'\n      )\n    }\n    const [serverSnapshot] = useState<R | undefined>(() => _serverSnapshot)\n\n    const params = useParams<P>(_params)\n\n    if (!store) {\n      if (onPublicAccessOnly) {\n        const hasAuth = checkAuth(projectId, token)\n        if (!hasAuth) {\n          onPublicAccessOnly()\n        }\n      }\n\n      // Lazy load `@sanity/groq-store` as it's quite a big chunk of JS`\n      const groqStore = importGroqStore()\n\n      store = groqStore({\n        projectId,\n        dataset,\n        documentLimit,\n        subscriptionThrottleMs,\n        includeTypes,\n        token: token === null ? undefined : token,\n        // Lazy load the huge `event-source-polyfill`, but only if a token is specified\n        EventSource: token === null ? undefined : importEventSourcePolyfill(),\n        listen: true,\n        overlayDrafts,\n      })\n    }\n\n    const initial = serverSnapshot ?? preload<R, P, Q>(store, query, params)\n    const syncStore = useMemo(() => {\n      // Make sure that React suspends the component until the groq store is finished loading the dataset and able to execute the query\n      let snapshot = initial\n\n      return {\n        getServerSnapshot:\n          serverSnapshot === undefined ? undefined : () => serverSnapshot,\n        getSnapshot: () => snapshot,\n        subscribe: (onStoreChange: () => void) => {\n          const subscription = store.subscribe(\n            query,\n            typeof params === 'undefined' ? {} : params,\n            (err, result) => {\n              if (err) {\n                console.error(\n                  'Error thrown in the usePreviewHook subscription',\n                  err\n                )\n                throw err\n              } else {\n                snapshot = result\n                onStoreChange()\n              }\n            }\n          )\n\n          return () => subscription.unsubscribe()\n        },\n      }\n    }, [initial, params, query, serverSnapshot])\n\n    useEffect(() => {\n      const callback = () => {\n        store.close()\n      }\n      window.addEventListener('beforeunload', callback)\n      return () => window.removeEventListener('beforeunload', callback)\n    }, [])\n\n    return useSyncExternalStore(\n      syncStore.subscribe,\n      syncStore.getSnapshot,\n      syncStore.getServerSnapshot\n    )\n  }\n}\n\n/**\n * @public\n */\nexport type UsePreview<R = any, P = Params, Q = string> = (\n  token: string | null,\n  query: Q,\n  params?: P,\n  /**\n   * Providing a serverSnapshot significantly speeds up hydration time and lets you opt-in to not show loading UI\n   */\n  serverSnapshot?: R\n) => R\n\n/**\n * @public\n */\nexport interface PreviewConfig\n  extends Pick<\n    Config,\n    'projectId' | 'dataset' | 'includeTypes' | 'overlayDrafts'\n  > {\n  /**\n   * The maximum number of documents, to prevent using too much memory unexpectedly\n   * Throws on the first operation (query, retrieval, subscription) if reaching this limit.\n   * @defaultValue 3000\n   */\n  documentLimit?: number\n  /**\n   * Throttle the event emits to batch updates. If you have a lot of editors changing content at the same time it might help to increase this value to reduce the amount of rerenders React have to perform.\n   * @defaultValue 10\n   */\n  subscriptionThrottleMs?: number\n  /**\n   * You want to throw an error in this function if it's considered a failure if draft documents can't be queried.\n   *\n   * Without a `token` then the dataset export will attempt to use reuse the user token by setting `credentials: \"include\" when calling fetch()`.\n   * This only works with the `cookie` auth model you find in Sanity Studio. It doesn't work in browsers that require `cookieless` to login, such as iOS Safari and more.\n   * Currently the only way to fix this is to define a `token` that has `viewer` rights in your project.\n   * It's not recommended to rely on auth at the moment as it limits the use of previews to Chromium based browsers and users that have a Sanity account in the project.\n   * If you still want to use the `cookie` auth model you'll want to throw an error if the user don't have a cookie based session established. If this method is undefined, the default, it'll only query published, public, documents.\n   * ```tsx\n   * import {definePreview} from '@sanity/preview-kit'\n   * const usePreview = definePreview({\n   *  onPublicAccessOnly: () => {\n   *   throw new Error('Not authenticated - preview not available')\n   * })\n   * ```\n   *\n   * If you're building a preview experience that doesn't query drafts then you can just leave this function undefined.\n   *\n   * Enabling this will slightly slow-down startup as it will wait with exporting the dataset until it has checked if you have a cookie session.\n   * This check is done by calling `https://${projectId}.api.sanity.io/v1/users/me` with fetch() and `credentials: \"include\"`.\n   * If `token` is set it'll set `headers: {Authorization: \"Bearer ${token}\"}` instead.\n   * But if you're already setting `token` you can skip defining this function to run startup faster, if the `token` is invalid it'll throw while exporting the dataset anyway.\n   */\n  onPublicAccessOnly?: () => void\n  /**\n   * @defaultValue true\n   */\n  overlayDrafts?: boolean\n}\n\n/**\n * @internal\n */\nexport const _preloadQuery = <R = any>(\n  store: GroqStore,\n  query: string,\n  params?: Params\n): Promise<R> =>\n  // eslint-disable-next-line no-warning-comments\n  // @todo: fix the casting to any here\n  store.query<R>(query, params)\n\n/**\n * @public\n */\nexport const definePreview = (config: PreviewConfig): UsePreview =>\n  _definePreview({\n    ...config,\n    importEventSourcePolyfill: () =>\n      suspend(\n        () => _lazyEventSourcePolyfill(),\n        ['@sanity/preview-kit', 'event-source-polyfill']\n      ),\n    importGroqStore: () =>\n      suspend(\n        () => _lazyGroqStore(),\n        ['@sanity/preview-kit', '@sanity/groq-store']\n      ),\n    preload: (store, query, params) =>\n      suspend(\n        () => _preloadQuery<any>(store, query, params),\n        ['@sanity/preview-kit', 'preload', query, JSON.stringify(params ?? {})]\n      ),\n    checkAuth: (projectId, token) =>\n      suspend(\n        () => _checkAuth(projectId, token),\n        ['@sanity/preview-kit', 'checkAuth', projectId, token]\n      ),\n  })\n", "import { type ReactNode, Suspense, useEffect, useReducer } from 'react'\n\n/** @public */\nexport type PreviewSuspenseProps = {\n  children: ReactNode\n  fallback: ReactNode\n}\n\n/**\n * Preview Mode really needs to only load as client-only, as it uses EventSource to stream data from Content Lake.\n * We don't want to run anything on the server but the fallback until it's loaded.\n * It's used in the same way as `React.Suspense`, it just also defers render until the component is mounted:\n * ```tsx\n * import {PreviewSuspense} from '@sanity/preview-kit'\n *\n * export default function App() {\n *   return (\n *     <PreviewSuspense fallback={<div>Loading preview...</div>}>\n *       <ComponentUsingPreviewHooks />\n *     </PreviewSuspense>\n *   )\n * }\n * ```\n * @public\n */\nexport function PreviewSuspense({ children, fallback }: PreviewSuspenseProps) {\n  const [mounted, mount] = useReducer(() => true, false)\n  useEffect(mount, [mount])\n\n  return (\n    <Suspense fallback={fallback}>{mounted ? children : fallback}</Suspense>\n  )\n}\n", "import React from 'react'\n\nexport default function ExitPreview() {\n  return (\n    <div className=\"pointer-events-none fixed inset-0 flex h-screen w-screen items-end justify-center\">\n      <form className=\"pointer-events-auto\" action=\"/resource/preview\" method=\"POST\">\n        <button className=\"bg-black p-4 font-bold text-white\" type=\"submit\">\n          Exit Preview Mode\n        </button>\n      </form>\n    </div>\n  )\n}\n", "/* eslint-disable prettier/prettier */\nimport React from 'react';\nimport { definePreview } from '@sanity/preview-kit';\n\nimport SanityContent from '~/components/SanityContent';\nimport { projectDetails } from '~/sanity/projectDetails';\nimport type { RecordDocument } from '~/types/product';\nimport Layout from '~/components/Layout';\nimport Title from '~/components/Title';\nimport AlbumCover from '~/components/RecordCover';\nimport ExitPreview from '~/components/ExitPreview';\nimport { Link } from '@remix-run/react';\n\nexport default function Record(props: RecordDocument) {\n  const {\n    _id,\n    title,\n    referral,\n    category,\n    categoryslug,\n    tags,\n    content,\n    overview,\n    support,\n    ease,\n    image,\n    features,\n    pros,\n    cons,\n    score,\n    pricing,\n  } = props;\n\n  const nonYellowStar = (\n    <svg\n      aria-hidden='true'\n      className='h-5 w-5 text-gray-300 dark:text-gray-500'\n      fill='currentColor'\n      viewBox='0 0 20 20'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <path d='M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z'></path>\n    </svg>\n  );\n  const yellowStar = (\n    <svg\n      aria-hidden='true'\n      className='h-5 w-5 text-yellow-400'\n      fill='currentColor'\n      viewBox='0 0 20 20'\n      xmlns='http://www.w3.org/2000/svg'\n    >\n      <path d='M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z'></path>\n    </svg>\n  );\n\n  const starIcons = Array(5)\n    .fill(nonYellowStar)\n    .map((star, index) => {\n      if (index < (score ?? 0)) {\n        return yellowStar;\n      }\n      return star;\n    });\n\n  return (\n    <Layout>\n      <section className=' mb-6 border p-4 md:p-6  '>\n        <div className='mx-auto  grid  gap-4 md:py-8 lg:grid-cols-12 lg:gap-8 lg:py-16 xl:gap-0'>\n          <div className='order-2 mr-auto space-y-2 place-self-center md:order-1 lg:col-span-7'>\n            <header className='space-y-4'>\n              {category ? (\n                <h2 className='  text-xs uppercase tracking-widest opacity-70 '>\n                  Category:{' '}\n                  <Link\n                    to={'/categories/' + categoryslug}\n                    className='text-xs underline'\n                  >\n                    {category}\n                  </Link>\n                </h2>\n              ) : null}\n              {title ? <Title>{title}</Title> : null}\n              {content && content?.length > 0 ? (\n                <section className=' pr-4  text-6xl italic  '>\n                  <SanityContent value={content} />\n                </section>\n              ) : null}\n\n              {tags ? (\n                <div className='flex flex-wrap space-x-2 space-y-2'>\n                  <h2 className='w-full text-xs uppercase tracking-widest opacity-70 '>\n                    Tags:\n                  </h2>\n                  {tags.map((tag) => (\n                    <Link\n                      key={tag._key}\n                      to={'/tags/' + tag.slug}\n                      className='rounded-xl w-auto  rounded-full border border-black px-2 font-mono text-sm   lowercase dark:border-white'\n                    >\n                      {tag.title}{' '}\n                    </Link>\n                  ))}\n                </div>\n              ) : null}\n              {score ? (\n                <section>\n                  <h2 className='text-xs  uppercase tracking-widest opacity-70 '>\n                    Score:\n                  </h2>{' '}\n                  <span className='text-4xl text-yellow-500'></span>\n                  <div className='flex items-center'>\n                    {starIcons}\n                    <p className='ml-2 text-sm font-medium text-gray-500 dark:text-gray-400'>\n                      {score} out of 5\n                    </p>\n                  </div>\n                </section>\n              ) : null}\n              {pricing ? (\n                <section>\n                  <h2 className='text-xs  uppercase tracking-widest opacity-70 '>\n                    Price Range:\n                  </h2>{' '}\n                  <p className='text-bold font-serif text-2xl italic text-green-600'>\n                    {' '}\n                    {pricing}\n                  </p>\n                </section>\n              ) : null}\n              <Link\n                to='#overview'\n                className=' mr-4 inline-flex w-full justify-center border-2 border-blue-300 py-4 px-12 text-blue-600 dark:text-blue-300 md:w-auto '\n              >\n                Learn more\n              </Link>\n              {referral ? (\n                <a\n                  className=' from-blue-5 200 inline-flex w-full justify-center border-2 border-blue-500 bg-blue-500 py-4 px-12\n                  text-white md:w-auto'\n                  href={referral}\n                >\n                  Try {title} now\n                </a>\n              ) : null}\n            </header>\n          </div>\n          <div className='order-1 md:order-2 lg:col-span-5 lg:mt-0 '>\n            <AlbumCover image={image} title={title} />\n          </div>\n        </div>\n      </section>\n\n      <article className='flex flex-col items-start gap-4 lg:flex-row lg:gap-12'>\n        <div className='grid-gap-4 top-1 mx-auto grid grid-cols-1 space-y-4 md:sticky md:max-w-[70vw]'>\n          <AlbumCover image={image} title={title} />\n          {features && features?.length > 0 ? (\n            <>\n              <ul className='grid grid-cols-1 divide-y divide-gray-100 rounded border bg-[#ffffff] p-4 dark:divide-gray-900 dark:bg-[#111111]'>\n                <li className='featureing-tighter py-3 text-2xl font-bold'>\n                  {features?.length === 1\n                    ? `1 Great Feature`\n                    : `${features?.length} Key Features`}\n                </li>\n                {features.map((feature) => (\n                  <li\n                    key={feature._key}\n                    className='flex items-center justify-between py-3'\n                  >\n                    <span className='text-lg'>{feature.title}</span>\n                  </li>\n                ))}\n              </ul>\n            </>\n          ) : null}\n        </div>\n        <div className=' flex flex-shrink-0 flex-col gap-4 md:gap-4 lg:w-2/3'>\n          {overview && overview?.length > 0 ? (\n            <section id='overview'>\n              <h2 className='text-2xl'>Overview</h2>\n              <SanityContent value={overview} />\n            </section>\n          ) : null}\n          {ease && ease?.length > 0 ? (\n            <section className='mt-6 border-t border-gray-400 py-6'>\n              <h2 className='text-2xl '>Ease of Use</h2>\n              <SanityContent value={ease} />\n            </section>\n          ) : null}\n          {support && support?.length > 0 ? (\n            <section className='mt-6 border-t border-gray-400 py-6'>\n              <h2 className='text-2xl '>Customer Support</h2>\n              <SanityContent value={support} />\n            </section>\n          ) : null}\n          {referral ? (\n            <a\n              href={referral}\n              className='mr-auto w-auto border-2 border-purple-500 py-4 px-12 text-purple-500'\n            >\n              Try Out Now\n            </a>\n          ) : null}\n\n          {pros && cons && pros?.length > 0 && cons?.length > 0 ? (\n            <section>\n              <h2 className=' py-3 text-2xl font-bold'>Pros & Cons</h2>\n              <div className='grid divide-x divide-gray-100 dark:divide-gray-900  md:grid-cols-2'>\n                {pros && pros?.length > 0 ? (\n                  <div className='p-4'>\n                    <h2>Pros</h2>\n                    <ul className='grid grid-cols-1 divide-y divide-gray-100 dark:divide-gray-900'>\n                      {pros.map((pro) => (\n                        <li\n                          key={pro._key}\n                          className='flex items-center justify-between py-3'\n                        >\n                          <span className='text-lg'>\uD83D\uDC4D {pro.title}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                ) : null}\n                {cons && cons?.length > 0 ? (\n                  <div className='p-4'>\n                    <h2 className='text-sm uppercase'>Cons</h2>\n\n                    <ul className=' grid grid-cols-1 divide-y divide-gray-100 dark:divide-gray-900'>\n                      {cons.map((con) => (\n                        <li key={con._key} className=' py-3'>\n                          <h3 className='text-lg'>\uD83D\uDC4E {con.title}</h3>\n                          <span className='text-lg'> {con.description}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                ) : null}\n              </div>\n            </section>\n          ) : null}\n        </div>\n      </article>\n    </Layout>\n  );\n}\n\ntype PreviewRecordProps = {\n  query: string;\n  params: { [key: string]: string };\n  token: string | null;\n};\n\nconst { projectId, dataset } = projectDetails();\nconst usePreview = definePreview({ projectId, dataset });\n\nexport function PreviewRecord(props: PreviewRecordProps) {\n  const { query, params, token } = props;\n\n  const data = usePreview(token ?? null, query, params);\n\n  return (\n    <>\n      <ExitPreview />\n      <Record {...data} />\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["entry", "_checkAuth", "projectId", "token", "headers", "Authorization", "res", "fetch", "credentials", "json", "Boolean", "id", "_lazyGroqStore", "pkg", "groqStore", "default", "_lazyEventSourcePolyfill", "EventSourcePolyfill", "useParams", "params", "stringifiedParams", "useMemo", "JSON", "stringify", "parse", "_definePreview", "dataset", "documentLimit", "subscriptionThrottleMs", "overlayDrafts", "importEventSourcePolyfill", "importGroqStore", "preload", "onPublicAccessOnly", "checkAuth", "includeTypes", "console", "warn", "usePreview", "store", "query", "_params", "_serverSnapshot", "document", "Error", "serverSnapshot", "useState", "hasAuth", "EventSource", "listen", "initial", "syncStore", "snapshot", "getServerSnapshot", "getSnapshot", "subscribe", "onStoreChange", "subscription", "err", "result", "error", "unsubscribe", "useEffect", "callback", "close", "window", "addEventListener", "removeEventListener", "useSyncExternalStore", "_preloadQuery", "definePreview", "config", "suspend", "PreviewSuspense", "children", "fallback", "mounted", "mount", "useReducer", "jsx", "Suspense", "import_jsx_dev_runtime", "query"]
}
