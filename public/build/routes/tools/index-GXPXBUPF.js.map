{
  "version": 3,
  "sources": ["../../../../app/routes/tools/index.tsx"],
  "sourcesContent": ["/* eslint-disable prettier/prettier */\nimport type { LinksFunction, LoaderArgs, MetaFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport groq from 'groq';\nimport { useRouteData } from 'remix-utils';\n\nimport AlbumCover from '~/components/RecordCover';\nimport Layout from '~/components/Layout';\nimport Title from '~/components/Title';\nimport { getClient } from '~/sanity/client';\nimport stylesheet from '~/tailwind.css';\nimport { productStubsZ } from '~/types/product';\nimport type { HomeDocument } from '~/types/home';\nimport SanityContent from '~/components/SanityContent';\nimport ProductCard from '~/components/ProductCard';\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: stylesheet }];\n};\n\nexport const meta: MetaFunction = (data) => {\n  const home = data.parentsData.root.home as HomeDocument;\n\n  return {\n    title: [home.title, home.siteTitle].filter(Boolean).join(' | '),\n  };\n};\n\nexport const loader = async (props: LoaderArgs) => {\n  const query = groq`*[_type == \"product\"][0...12]{\n    _id,\n    title,\n    metadescription,\n    tags[]{\n    _key,\n    \"title\": @->title,\n    \"slug\": @->slug.current\n  },\n    \"slug\": slug.current,\n    \"category\": category->title,\n    image\n  }`;\n\n  const products = await getClient()\n    .fetch(query)\n    .then((res) => (res ? productStubsZ.parse(res) : null));\n\n  if (!products) {\n    throw new Response('Not found', { status: 404 });\n  }\n\n  return json({ products });\n};\n\nexport default function Index() {\n  const { products } = useLoaderData<typeof loader>();\n  const { home } = useRouteData(`root`) as { home: HomeDocument };\n\n  return (\n    <Layout>\n      <div className='grid grid-cols-1 gap-6 md:gap-12'>\n        <header className='space-y-4'>\n          <Title>All tools</Title>\n        </header>\n        {products.length > 0 ? (\n          <ul className='grid  gap-6 md:grid-cols-3 md:gap-16 '>\n            {products.map((product) => (\n              <ProductCard key={product._id} product={product} />\n            ))}\n          </ul>\n        ) : (\n          <p>No products found</p>\n        )}\n      </div>\n    </Layout>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,kBAAiB;AA2DP;AA9CH,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,iBAAW,CAAC;AACjD;AAEO,IAAM,OAAqB,CAAC,SAAS;AAC1C,QAAM,OAAO,KAAK,YAAY,KAAK;AAEnC,SAAO;AAAA,IACL,OAAO,CAAC,KAAK,OAAO,KAAK,SAAS,EAAE,OAAO,OAAO,EAAE,KAAK,KAAK;AAAA,EAChE;AACF;AA4Be,SAAR,QAAyB;AAC9B,QAAM,EAAE,SAAS,IAAI,cAA6B;AAClD,QAAM,EAAE,KAAK,IAAI,aAAa,MAAM;AAEpC,SACE,mDAAC,UACC,6DAAC,SAAI,WAAU,oCACb;AAAA,uDAAC,YAAO,WAAU,aAChB,6DAAC,SAAM,yBAAP;AAAA;AAAA;AAAA;AAAA,WAAgB,KADlB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACC,SAAS,SAAS,IACjB,mDAAC,QAAG,WAAU,yCACX,mBAAS,IAAI,CAAC,YACb,mDAAC,eAA8B,WAAb,QAAQ,KAA1B;AAAA;AAAA;AAAA;AAAA,WAAiD,CAClD,KAHH;AAAA;AAAA;AAAA;AAAA,WAIA,IAEA,mDAAC,OAAE,iCAAH;AAAA;AAAA;AAAA;AAAA,WAAoB;AAAA,OAXxB;AAAA;AAAA;AAAA;AAAA,SAaA,KAdF;AAAA;AAAA;AAAA;AAAA,SAeA;AAEJ;",
  "names": []
}
