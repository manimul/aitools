{
  "version": 3,
  "sources": ["../../../app/routes/index.tsx"],
  "sourcesContent": ["/* eslint-disable prettier/prettier */\nimport type { LinksFunction, LoaderArgs, MetaFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport groq from 'groq';\nimport { useRouteData } from 'remix-utils';\nimport urlBuilder from '@sanity/image-url';\nimport { projectDetails } from '~/sanity/projectDetails';\n\nimport AlbumCover from '~/components/RecordCover';\nimport Layout from '~/components/Layout';\nimport Title from '~/components/Title';\nimport { getClient } from '~/sanity/client';\nimport stylesheet from '~/tailwind.css';\nimport { categoriesZ, productStubsZ } from '~/types/product';\nimport type { HomeDocument } from '~/types/home';\nimport SanityContent from '~/components/SanityContent';\nimport ProductCard from '~/components/ProductCard';\nimport { guidesZ, infosZ } from '~/types/content';\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: stylesheet }];\n};\n\nexport const meta: MetaFunction = (data) => {\n  const home = data.parentsData.root.home as HomeDocument;\n\n  return {\n    title: [home.title, home.siteTitle].filter(Boolean).join(' | '),\n  };\n};\n\nexport const loader = async (props: LoaderArgs) => {\n  const query = groq`*[_type == \"product\"][0...4]{\n    _id,\n    title,\n    metadescription,\n    tags[]{\n      _key,\n      \"title\": @->title,\n      \"slug\": @->slug.current\n    },\n    \"slug\": slug.current,\n    \"category\": category->title,\n    image\n  }`;\n\n  const categoryQuery = groq`*[_type == \"category\"][0...4]{\n    title,\n    image,\n    slug\n  }`;\n\n  const infoQuery = groq`*[_type == \"info\"][0...4]{\n        _id,\n\n  title,\n  image,\ncontent\n}`;\n\n  const guideQuery = groq`*[_type == \"guide\"][0...4]{\n    _id,\n    title,\n    \"slug\": slug.current,\n    image,\n    content,\n    metatitle,\n    metadescription,\n    metaimage,\n    overview,\n    tags[]{\n      _key,\n      \"title\": @->title,\n      \"slug\": @->slug.current\n    }\n  }`;\n\n  const [products, categories, guides, infos] = await Promise.all([\n    getClient()\n      .fetch(query)\n      .then((res) => (res ? productStubsZ.parse(res) : null)),\n    getClient()\n      .fetch(categoryQuery)\n      .then((res) => (res ? categoriesZ.parse(res) : null)),\n    getClient()\n      .fetch(guideQuery)\n      .then((res) => (res ? guidesZ.parse(res) : null)),\n    getClient()\n      .fetch(infoQuery)\n      .then((res) => (res ? infosZ.parse(res) : null)),\n  ]);\n\n  if (!products || !categories || !guides || !infos) {\n    throw new Response('Not found', { status: 404 });\n  }\n\n  return json({ products, categories, guides, infos });\n};\n\nexport default function Index() {\n  const { products, categories, guides, infos } =\n    useLoaderData<typeof loader>();\n  const { home } = useRouteData(`root`) as { home: HomeDocument };\n\n  return (\n    <Layout>\n      <div className='grid grid-cols-1 gap-6 md:gap-12'>\n        <section className=' mb-6 border p-4 md:p-6  '>\n          <div className='mx-auto grid  gap-4 md:py-8 lg:grid-cols-12 lg:gap-8 lg:py-16 xl:gap-0'>\n            <div className='order-2 mr-auto space-y-4 place-self-center md:order-1 lg:col-span-7'>\n              <header className='space-y-4'>\n                {home.title ? <Title>{home.title}</Title> : null}\n                <p className='text-xl'>{home.subTitle} here </p>\n              </header>\n            </div>\n            <div className='order-1 md:order-2 lg:col-span-5 lg:mt-0 lg:flex'>\n              <AlbumCover image={home.image} title={home.title} />\n            </div>\n          </div>\n        </section>\n        {guides.length > 0 ? (\n          <section>\n            <h2 className='mb-6 font-mono text-2xl capitalize md:text-6xl'>\n              Newest howtu.ai Guides\n            </h2>\n            <div className='grid md:grid-cols-3'>\n              {guides.map((guide) => (\n                <Link\n                  to={'/guides/' + guide.slug}\n                  key={guide.title}\n                  className='group grid items-center gap-4 border p-2 transition-all duration-300 hover:-translate-y-2 hover:border-dashed md:grid-cols-2 '\n                >\n                  <div className=''>\n                    {guide.image ? (\n                      <img\n                        className='h-auto w-full  object-cover shadow-black transition-all duration-300  group-hover:scale-105 '\n                        src={urlBuilder(projectDetails())\n                          .image(guide.image.asset._ref)\n                          .height(300)\n                          .width(400)\n                          .fit('max')\n                          .auto('format')\n                          .url()}\n                        alt={String(guide.title) ?? ``}\n                        loading='lazy'\n                      />\n                    ) : (\n                      <div className='flex aspect-square w-full items-center justify-center bg-gray-100 text-gray-500'>\n                        {guide.title ?? `Missing thumbnail`}\n                      </div>\n                    )}\n                  </div>\n                  <div>\n                    {' '}\n                    <h2 className='text-2xl'> {guide.title}</h2>\n                    <span className='opacity-50  group-hover:underline group-hover:opacity-100'>\n                      Read the guide\n                    </span>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          </section>\n        ) : (\n          <p> No products found </p>\n        )}\n        {products.length > 0 ? (\n          <section className='my-12 border-t-2 border-dashed pt-12 '>\n            {' '}\n            <h2 className='mb-6 font-mono text-2xl capitalize md:text-6xl'>\n              Newest Tool Reviews\n            </h2>\n            <ul className='mb-12  grid gap-6 md:grid-cols-4 md:gap-16 '>\n              {products.slice(0, 4).map((product) => (\n                <ProductCard key={product._id} product={product} />\n              ))}\n            </ul>\n          </section>\n        ) : (\n          <p>No products found</p>\n        )}\n\n        <section>\n          {' '}\n          {categories.length > 0 ? (\n            <section className='my-12 border-t-2 border-dashed pt-12 '>\n              <h2 className='mb-6 font-mono text-2xl capitalize md:text-6xl'>\n                Newest Categories\n              </h2>\n              <div className='grid gap-6 md:grid-cols-2'>\n                {categories.map((category) => (\n                  <Link\n                    to={'/categories/' + category.slug.current}\n                    key={category.title}\n                  >\n                    <h2\n                      className='absolute z-10 bg-white p-4 font-mono text-3xl dark:bg-black\n                '\n                    >\n                      {category.title}\n                    </h2>\n\n                    {category.image ? (\n                      <img\n                        className='  h-auto  w-full object-cover  '\n                        src={urlBuilder(projectDetails())\n                          .image(category.image.asset._ref)\n                          .height(200)\n                          .width(500)\n                          .fit('max')\n                          .auto('format')\n                          .url()}\n                        alt={String(category.image.title) ?? ``}\n                        loading='lazy'\n                      />\n                    ) : (\n                      <div className='flex aspect-square w-full items-center justify-center bg-gray-100 text-gray-500'>\n                        {category.image.title ?? `Missing Record art`}\n                      </div>\n                    )}\n                  </Link>\n                ))}\n              </div>\n            </section>\n          ) : (\n            <p> No products found </p>\n          )}\n        </section>\n\n        <section>\n          {' '}\n          {infos.length > 0 ? (\n            <section className='my-12 border-t-2 border-dashed pt-12 '>\n              <div>\n                {infos.map((info) => (\n                  <div\n                    key={info.title}\n                    className='my-12  grid gap-6 border-t-2 border-dashed pt-12 md:grid-cols-2 '\n                  >\n                    {info.image ? (\n                      <div>\n                        {' '}\n                        <h2\n                          className=' z-10  p-4 font-mono text-3xl \n                '\n                        >\n                          {info.title}\n                        </h2>\n                        <img\n                          className='  h-auto  w-full object-cover  '\n                          src={urlBuilder(projectDetails())\n                            .image(info.image.asset._ref)\n                            .height(500)\n                            .width(500)\n                            .fit('max')\n                            .auto('format')\n                            .url()}\n                          alt={String(info.image.title) ?? ``}\n                          loading='lazy'\n                        />\n                      </div>\n                    ) : (\n                      <div className='flex aspect-square w-full items-center justify-center bg-gray-100 text-gray-500'>\n                        {info.image.title ?? `Missing Record art`}\n                      </div>\n                    )}\n\n                    {info.content && info.content?.length > 0 ? (\n                      <section id='overview'>\n                        <SanityContent value={info.content} />\n                      </section>\n                    ) : null}\n                  </div>\n                ))}\n              </div>\n            </section>\n          ) : (\n            <p> No products found </p>\n          )}\n        </section>\n      </div>\n    </Layout>\n  );\n}\n"],
  "mappings": "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",
  "names": ["urlBuilder"]
}
