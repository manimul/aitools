{
  "version": 3,
  "sources": ["../../../../app/routes/categories/$slug.tsx"],
  "sourcesContent": ["/* eslint-disable prettier/prettier */\n// File: /categories/$slug.tsx\n\nimport { Link, useLoaderData, useParams } from '@remix-run/react';\nimport groq from 'groq';\nimport { json } from '@remix-run/node';\nimport type { productsZ, RecordDocument } from '~/types/product';\nimport { projectDetails } from '~/sanity/projectDetails';\n\nimport { categoryZ, productStubsZ, groupedProductsZ } from '~/types/product';\n\nimport type { LinksFunction, LoaderArgs } from '@remix-run/node';\nimport Layout from '~/components/Layout';\nimport stylesheet from '~/tailwind.css';\nimport AlbumCover from '~/components/RecordCover';\n\nimport { getClient } from '~/sanity/client';\nimport Title from '~/components/Title';\nimport urlBuilder from '@sanity/image-url';\nimport SanityContent from '~/components/SanityContent';\nimport ProductCard from '~/components/ProductCard';\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: stylesheet }];\n};\n\n// Load the `category` document with this slug\nexport const loader = async (props: LoaderArgs) => {\n  const { slug } = props.params;\n  const categoryQuery = groq`*[_type == \"category\" && slug.current == $slug][0] {\n    title,\n    image,\n    slug\n  }`;\n\n  const category = await getClient()\n    .fetch(categoryQuery, { slug })\n    .then((res) => (res ? categoryZ.parse(res) : null));\n\n  if (!category) {\n    throw new Response('Not found', { status: 404 });\n  }\n\n  const productsQuery = groq`*[_type == \"product\" && references(*[_type == \"category\" && slug.current == $slug]._id)] | order(publishedAt desc) [0...12]{\n    _id,\n    title,\n    metadescription,\n    content,\n    \"slug\": slug.current,\n    \"category\": category->title,\n    \"tags\": tags[]->{\n      title,\n      \"slug\": slug.current\n    },\n    image\n  }`;\n\n  const products = await getClient()\n    .fetch(productsQuery, { slug })\n    .then((res) => (res ? groupedProductsZ.parse(res) : null));\n\n  if (!products) {\n    throw new Response('Not found', { status: 404 });\n  }\n\n  return json({ category, products });\n};\n\nfunction groupProductsByTags<T>(products: T[]): {\n  [key: string]: T[];\n} {\n  const groupedProducts: { [key: string]: T[] } = {};\n\n  products.forEach((product: any) => {\n    if (product.tags) {\n      product.tags.forEach((tag: any) => {\n        const tagName = tag.title;\n        if (tagName) {\n          if (!groupedProducts[tagName]) {\n            groupedProducts[tagName] = [];\n          }\n          groupedProducts[tagName].push(product);\n        }\n      });\n    }\n  });\n\n  return groupedProducts;\n}\n\nexport default function Categories() {\n  const { category, products } = useLoaderData<typeof loader>();\n  const params = useParams();\n  const groupedProducts = groupProductsByTags(products);\n  console.log('Grouped products:', groupedProducts);\n\n  return (\n    <Layout>\n      <div>\n        <section className=' mb-6 border border-dashed p-4 md:p-6  '>\n          <div className='mx-auto grid   gap-3 py-3 lg:grid-cols-12 lg:gap-8 lg:py-4 xl:gap-0'>\n            <div className='mr-auto space-y-2 place-self-center lg:col-span-6'>\n              <header className='space-y-4'>\n                <Title>\n                  The <span className='font-mono text-blue-300'>howtu.ai</span>{' '}\n                  guide to AI{' '}\n                  <span className='font-serif text-gray-400 '>\n                    {category.title}\n                  </span>{' '}\n                  tools\n                </Title>\n              </header>\n            </div>\n            <div className=' lg:col-span-6 lg:mt-0 lg:flex'>\n              <AlbumCover image={category.image} title={category.title} />\n            </div>\n          </div>\n        </section>\n\n        {products.length > 0 ? (\n          <div className='grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4'>\n            {products.map((product) => (\n              <ProductCard key={product._id} product={product} />\n            ))}\n          </div>\n        ) : (\n          <p>No products found with this tag.</p>\n        )}\n\n        {Object.keys(groupedProducts).length > 0 ? (\n          Object.keys(groupedProducts).map((tagTitle) => (\n            <div className='my-12  border-t-2 border-dashed' key={tagTitle}>\n              <h2 className='mt-12 mb-6 font-mono text-6xl capitalize'>\n                {tagTitle}\n              </h2>\n              <div className='grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3'>\n                {groupedProducts[tagTitle].map((product) => (\n                  <ProductCard key={product._id} product={product} />\n                ))}\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>No products found with this tag.</p>\n        )}\n      </div>\n    </Layout>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,kBAAiB;AAoGK;AAlFf,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,iBAAW,CAAC;AACjD;AA4CA,SAAS,oBAAuB,UAE9B;AACA,QAAM,kBAA0C,CAAC;AAEjD,WAAS,QAAQ,CAAC,YAAiB;AACjC,QAAI,QAAQ,MAAM;AAChB,cAAQ,KAAK,QAAQ,CAAC,QAAa;AACjC,cAAM,UAAU,IAAI;AACpB,YAAI,SAAS;AACX,cAAI,CAAC,gBAAgB,UAAU;AAC7B,4BAAgB,WAAW,CAAC;AAAA,UAC9B;AACA,0BAAgB,SAAS,KAAK,OAAO;AAAA,QACvC;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAED,SAAO;AACT;AAEe,SAAR,aAA8B;AACnC,QAAM,EAAE,UAAU,SAAS,IAAI,cAA6B;AAC5D,QAAM,SAAS,UAAU;AACzB,QAAM,kBAAkB,oBAAoB,QAAQ;AACpD,UAAQ,IAAI,qBAAqB,eAAe;AAEhD,SACE,mDAAC,UACC,6DAAC,SACC;AAAA,uDAAC,aAAQ,WAAU,2CACjB,6DAAC,SAAI,WAAU,uEACb;AAAA,yDAAC,SAAI,WAAU,qDACb,6DAAC,YAAO,WAAU,aAChB,6DAAC,SAAM;AAAA;AAAA,QACD,mDAAC,UAAK,WAAU,2BAA0B,wBAA1C;AAAA;AAAA;AAAA;AAAA,eAAkD;AAAA,QAAQ;AAAA,QAAI;AAAA,QACtD;AAAA,QACZ,mDAAC,UAAK,WAAU,6BACb,mBAAS,SADZ;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAAQ;AAAA,QAAI;AAAA,WALd;AAAA;AAAA;AAAA;AAAA,aAOA,KARF;AAAA;AAAA;AAAA;AAAA,aASA,KAVF;AAAA;AAAA;AAAA;AAAA,aAWA;AAAA,MACA,mDAAC,SAAI,WAAU,kCACb,6DAAC,eAAW,OAAO,SAAS,OAAO,OAAO,SAAS,SAAnD;AAAA;AAAA;AAAA;AAAA,aAA0D,KAD5D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,WAgBA,KAjBF;AAAA;AAAA;AAAA;AAAA,WAkBA;AAAA,IAEC,SAAS,SAAS,IACjB,mDAAC,SAAI,WAAU,uEACZ,mBAAS,IAAI,CAAC,YACb,mDAAC,eAA8B,WAAb,QAAQ,KAA1B;AAAA;AAAA;AAAA;AAAA,WAAiD,CAClD,KAHH;AAAA;AAAA;AAAA;AAAA,WAIA,IAEA,mDAAC,OAAE,gDAAH;AAAA;AAAA;AAAA;AAAA,WAAmC;AAAA,IAGpC,OAAO,KAAK,eAAe,EAAE,SAAS,IACrC,OAAO,KAAK,eAAe,EAAE,IAAI,CAAC,aAChC,mDAAC,SAAI,WAAU,mCACb;AAAA,yDAAC,QAAG,WAAU,4CACX,sBADH;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,SAAI,WAAU,wDACZ,0BAAgB,UAAU,IAAI,CAAC,YAC9B,mDAAC,eAA8B,WAAb,QAAQ,KAA1B;AAAA;AAAA;AAAA;AAAA,aAAiD,CAClD,KAHH;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SARoD,UAAtD;AAAA;AAAA;AAAA;AAAA,WASA,CACD,IAED,mDAAC,OAAE,gDAAH;AAAA;AAAA;AAAA;AAAA,WAAmC;AAAA,OA7CvC;AAAA;AAAA;AAAA;AAAA,SA+CA,KAhDF;AAAA;AAAA;AAAA;AAAA,SAiDA;AAEJ;",
  "names": []
}
