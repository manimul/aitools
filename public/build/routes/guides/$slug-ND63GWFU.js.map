{
  "version": 3,
  "sources": ["../../../../app/routes/guides/$slug.tsx"],
  "sourcesContent": ["/* eslint-disable prettier/prettier */\nimport type { LinksFunction, LoaderArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport groq from 'groq';\nimport stylesheet from '~/tailwind.css';\nimport { getClient } from '~/sanity/client';\nimport { guideZ } from '~/types/content';\nimport AlbumCover from '~/components/RecordCover';\n\nimport { getSession } from '~/sessions';\nimport Layout from '~/components/Layout';\nimport Title from '~/components/Title';\nimport SanityContent from '~/components/SanityContent';\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: stylesheet }];\n};\n\n// Load the `product` document with this slug\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  const session = await getSession(request.headers.get('Cookie'));\n  const token = session.get('token');\n  const preview = Boolean(token);\n\n  const query = groq`*[_type == \"guide\" && slug.current == $slug][0]{\n        _id,\n        title,\n        // GROQ can re-shape data in the request!\n        \"slug\": slug.current,\n     \n        // for simplicity in this demo these are typed as \"any\"\n        // we can make them type-safe with a little more work\n        // https://www.simeongriggs.dev/type-safe-groq-queries-for-sanity-data-with-zod\n        image,\n        content,\n        metatitle,\n        metadescription,\n        metaimage,\n        overview,\n     \n   tags[]{\n        _key,\n        \"title\": @->title,\n        \"slug\": @->slug.current\n      }\n      }`;\n\n  const guide = await getClient(preview)\n    // Params from the loader uses the filename\n    // $slug.tsx has the params { slug: 'hello-world' }\n    .fetch(query, params)\n    // Parsed with Zod to validate data at runtime\n    // and generate a Typescript type\n    .then((res) => (res ? guideZ.parse(res) : null));\n\n  if (!guide) {\n    throw new Response('Not found', { status: 404 });\n  }\n\n  return json({\n    guide,\n  });\n};\n\nexport default function GuidePage() {\n  const { guide } = useLoaderData<typeof loader>();\n\n  return (\n    <Layout>\n      <section className=' -mx-32 -mt-32 mb-32 h-screen  max-h-screen border   '>\n        <header className=' absolute top-1/2 z-0 mx-auto -mt-12 ml-48 max-w-6xl '>\n          <Link className='underline' to='/guides'>\n            A howtu.ai guide\n          </Link>\n          <Title>{guide.title}</Title>\n        </header>\n        <div className='h-full  max-h-screen  overflow-hidden '>\n          <AlbumCover image={guide.image} title={guide.title} />\n        </div>\n      </section>\n      {guide.content && guide.content?.length > 0 ? (\n        <article className='mx-auto max-w-3xl'>\n          <SanityContent value={guide.content} />\n        </article>\n      ) : null}\n    </Layout>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,kBAAiB;AAoEP;AAzDH,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,iBAAW,CAAC;AACjD;AAgDe,SAAR,YAA6B;AAjEpC;AAkEE,QAAM,EAAE,MAAM,IAAI,cAA6B;AAE/C,SACE,mDAAC,UACC;AAAA,uDAAC,aAAQ,WAAU,yDACjB;AAAA,yDAAC,YAAO,WAAU,yDAChB;AAAA,2DAAC,QAAK,WAAU,aAAY,IAAG,WAAU,gCAAzC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,SAAO,gBAAM,SAAd;AAAA;AAAA;AAAA;AAAA,eAAoB;AAAA,WAJtB;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC,SAAI,WAAU,0CACb,6DAAC,eAAW,OAAO,MAAM,OAAO,OAAO,MAAM,SAA7C;AAAA;AAAA;AAAA;AAAA,aAAoD,KADtD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,IACC,MAAM,aAAW,WAAM,YAAN,mBAAe,UAAS,IACxC,mDAAC,aAAQ,WAAU,qBACjB,6DAAC,iBAAc,OAAO,MAAM,WAA5B;AAAA;AAAA;AAAA;AAAA,WAAqC,KADvC;AAAA;AAAA;AAAA;AAAA,WAEA,IACE;AAAA,OAhBN;AAAA;AAAA;AAAA;AAAA,SAiBA;AAEJ;",
  "names": []
}
