{
  "version": 3,
  "sources": ["../../app/root.tsx", "../../app/lib/getBodyClassNames.ts"],
  "sourcesContent": ["/* eslint-disable prettier/prettier */\nimport type { LinksFunction, LoaderArgs, MetaFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n  useLocation,\n} from '@remix-run/react';\nimport groq from 'groq';\nimport { z } from 'zod';\n\nimport { getClient } from '~/sanity/client';\nimport { homeZ } from '~/types/home';\nimport { themePreferenceCookie } from '~/cookies';\nimport { getBodyClassNames } from '~/lib/getBodyClassNames';\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: 'preconnect', href: 'https://cdn.sanity.io' },\n    {\n      rel: 'preconnect',\n      href: 'https://fonts.gstatic.com',\n      crossOrigin: 'anonymous',\n    },\n    {\n      rel: 'preconnect',\n      href: 'https://fonts.googleapis.com',\n      crossOrigin: 'anonymous',\n    },\n    {\n      href: 'https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@500;700&family=Inter:wght@500;700;800&family=PT+Serif:ital,wght@0,400;0,700;1,400;1,700&display=swap',\n      rel: 'stylesheet',\n    },\n  ];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  // Dark/light mode\n  const cookieHeader = request.headers.get('Cookie');\n  const cookie = (await themePreferenceCookie.parse(cookieHeader)) || {};\n  const themePreference = z\n    .union([z.literal('dark'), z.literal('light')])\n    .optional()\n    .parse(cookie.themePreference);\n\n  // Sanity content throughout the site\n  const query = groq`*[_id == \"home\"][0]{\n    title,\n    siteTitle,\n    subTitle,\n    image\n  }`;\n  const home = await getClient()\n    .fetch(query)\n    .then((res) => (res ? homeZ.parse(res) : null));\n\n  return json({\n    home,\n    themePreference,\n    ENV: {\n      SANITY_PUBLIC_PROJECT_ID: process.env.SANITY_PUBLIC_PROJECT_ID,\n      SANITY_PUBLIC_DATASET: process.env.SANITY_PUBLIC_DATASET,\n      SANITY_PUBLIC_API_VERSION: process.env.SANITY_PUBLIC_API_VERSION,\n    },\n  });\n};\n\nexport default function App() {\n  const { ENV, themePreference } = useLoaderData<typeof loader>();\n\n  const { pathname } = useLocation();\n  const isStudioRoute = pathname.startsWith('/studio');\n  const bodyClassNames = getBodyClassNames(themePreference);\n\n  return (\n    <html lang='en'>\n      <head>\n        <Meta />\n        <Links />\n        {isStudioRoute && typeof document === 'undefined' ? '__STYLES__' : null}\n        <script\n          async\n          src='https://www.googletagmanager.com/gtag/js?id=G-0129714B12'\n        ></script>\n\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n  gtag('config', 'G-0129714B12');\n`,\n          }}\n        ></script>\n      </head>\n      <body className={bodyClassNames}>\n        <Outlet />\n        <ScrollRestoration />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `window.ENV = ${JSON.stringify(ENV)}`,\n          }}\n        />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "export function getBodyClassNames(themePreference?: string): string {\n  // Use browser default if cookie is not set\n  const isDarkMode =\n    !themePreference && typeof document !== 'undefined'\n      ? window.matchMedia('(prefers-color-scheme: dark)').matches\n      : themePreference === `dark`\n  return [\n    `transition-colors duration-1000 ease-in-out min-h-screen`,\n    isDarkMode ? `dark bg-black text-white` : `bg-white text-black`,\n  ]\n    .join(' ')\n    .trim()\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAaA,kBAAiB;;;ACbV,SAAS,kBAAkB,iBAAkC;AAElE,QAAM,aACJ,CAAC,mBAAmB,OAAO,aAAa,cACpC,OAAO,WAAW,8BAA8B,EAAE,UAClD,oBAAoB;AAC1B,SAAO;AAAA,IACL;AAAA,IACA,aAAa,6BAA6B;AAAA,EAC5C,EACG,KAAK,GAAG,EACR,KAAK;AACV;;;AD2EQ;AAlED,IAAM,OAAqB,OAAO;AAAA,EACvC,SAAS;AAAA,EACT,UAAU;AACZ;AAEO,IAAM,QAAuB,MAAM;AACxC,SAAO;AAAA,IACL,EAAE,KAAK,cAAc,MAAM,wBAAwB;AAAA,IACnD;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AAAA,EACF;AACF;AAiCe,SAAR,MAAuB;AAC5B,QAAM,EAAE,KAAK,gBAAgB,IAAI,cAA6B;AAE9D,QAAM,EAAE,SAAS,IAAI,YAAY;AACjC,QAAM,gBAAgB,SAAS,WAAW,SAAS;AACnD,QAAM,iBAAiB,kBAAkB,eAAe;AAExD,SACE,mDAAC,UAAK,MAAK,MACT;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,MACN,iBAAiB,OAAO,aAAa,cAAc,eAAe;AAAA,MACnE;AAAA,QAAC;AAAA;AAAA,UACC,OAAK;AAAA,UACL,KAAI;AAAA;AAAA,QAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGC;AAAA,MAED;AAAA,QAAC;AAAA;AAAA,UACC,yBAAyB;AAAA,YACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMV;AAAA;AAAA,QARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASC;AAAA,SAlBH;AAAA;AAAA;AAAA;AAAA,WAmBA;AAAA,IACA,mDAAC,UAAK,WAAW,gBACf;AAAA,yDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB;AAAA,QAAC;AAAA;AAAA,UACC,yBAAyB;AAAA,YACvB,QAAQ,gBAAgB,KAAK,UAAU,GAAG;AAAA,UAC5C;AAAA;AAAA,QAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SATd;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,OA/BF;AAAA;AAAA;AAAA;AAAA,SAgCA;AAEJ;",
  "names": []
}
